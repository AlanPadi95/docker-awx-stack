version: '3.7'
services:

  web:
    image: ansible/awx_web
    depends_on:
      - rabbitmq
      - memcached
      - postgres
    ports:
      - "8052:8052"
    hostname: awxweb
    user: root
    deploy:
      mode: replicated
      replicas: 1
    volumes:
      - "./config/SECRET_KEY.txt:/etc/tower/SECRET_KEY"
      - "./config/environment.sh:/etc/tower/conf.d/environment.sh"
      - "./config/credentials.py:/etc/tower/conf.d/credentials.py"
      - "./config/nginx.conf:/etc/nginx/nginx.conf:ro"
      - "./projects:/var/lib/awx/projects:rw"
      - "./inventories:/var/lib/awx/inventories:rw"
      # - "/etc/pki/ca-trust/source/anchors:/etc/pki/ca-trust/source/anchors:ro' }}"
      # - "ssl_certificate:/etc/nginx/awxweb.pem:ro"
    environment:
      http_proxy: ''
      https_proxy: ''
      no_proxy: ''
    networks:
      - awx

  task:
    image: ansible/awx_task
    depends_on:
      - rabbitmq
      - memcached
      - web
      - postgres
    hostname: awx
    user: root
    deploy:
      mode: replicated
      replicas: 1
    volumes:
      - "./config/SECRET_KEY.txt:/etc/tower/SECRET_KEY"
      - "./config/environment.sh:/etc/tower/conf.d/environment.sh"
      - "./config/credentials.py:/etc/tower/conf.d/credentials.py"
      - "./projects:/var/lib/awx/projects:rw"
      # - "/etc/pki/ca-trust/source/anchors:/etc/pki/ca-trust/source/anchors:ro"
      # - "ssl_certificate:/etc/nginx/awxweb.pem:ro"
    environment:
      http_proxy: ''
      https_proxy: ''
      no_proxy: ''
    networks:
      - awx
    command:
      - "sudo pip2 install ptwinrm"
      - "sudo pip3 install ptwinrm"

  rabbitmq:
    image: ansible/awx_rabbitmq
    ports:
      - "5672"
      - "15672"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      RABBITMQ_DEFAULT_VHOST: "awx"
      RABBITMQ_DEFAULT_USER: "guest"
      RABBITMQ_DEFAULT_PASS: "changeme"
      RABBITMQ_ERLANG_COOKIE: "cookiemonster"
      http_proxy: ''
      https_proxy: ''
      no_proxy: ''
    networks:
      - awx

  memcached:
    image: "memcached"
    ports:
      - "11211"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      http_proxy: ''
      https_proxy: ''
      no_proxy: ''
    networks:
      - awx  
  
  postgres:
    image: postgres
    user: root
    ports:
      - "5432"
    deploy:
      mode: replicated
      replicas: 1
    volumes:
      - ./postgres/data:/var/lib/postgresql/data:Z
    environment:
      POSTGRES_USER: awx
      POSTGRES_PASSWORD: changeme
      POSTGRES_DB: awx
      PGDATA: /var/lib/postgresql/data/pgdata
      http_proxy: ''
      https_proxy: ''
      no_proxy: ''
    networks:
      - awx
  
  metricbeat:
    image: docker.elastic.co/beats/metricbeat:${ELASTIC_VERSION:-7.5.2}
    user: root
    environment:
      - KIBANA_HOST='${KIBANA_HOST}:5601'
      - ELASTIC_HOST='${ELASTIC_HOST}:9200'
      - ELASTICSEARCH_USERNAME=${ELASTICSEARCH_USERNAME-elastic}
      - ELASTICSEARCH_PASSWORD=${ELASTICSEARCH_PASSWORD-changeme}
      - AWX_DB_USER=${AWX_DB_USER:-awx}
      - AWX_DB_PASS=${AWX_DB_PASS:-changeme}
      - AWX_RABBITMQ_USER=${AWX_RABBITMQ_USER:-guest}
      - AWX_RABBITMQ_PASS=${AWX_RABBITMQ_PASS:-changeme}
    configs:
      - source: metricbeat_config
        target: /usr/share/metricbeat/metricbeat.yml
    command: -system.hostfs=/hostfs
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /sys/fs/cgroup:/hostfs/sys/fs/cgroup:ro
      - /proc:/hostfs/proc:ro
      - /:/hostfs:ro
      - ./metricbeat/dashboards:/usr/share/metricbeat/kibana/7/dashboard:ro
    deploy:
      mode: replicated
      replicas: 1
    networks:
      - awx

configs:
  metricbeat_config:
    file: ./metricbeat/config/metricbeat.yml

networks:
  awx:
    driver: overlay