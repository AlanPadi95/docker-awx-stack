metricbeat.config:
  modules:
    path: ${path.config}/modules.d/*.yml

metricbeat.autodiscover:
  providers:
    - type: docker
      hints.enabled: true

metricbeat.modules:
- module: system
  metricsets:
    - cpu             # CPU usage
    - load            # CPU load averages
    - memory          # Memory usage
    - network         # Network IO
    - process         # Per process metrics
    - process_summary # Process summary
    - uptime          # System Uptime
    - socket_summary  # Socket summary
    - core           # Per CPU core usage
    - diskio         # Disk IO
    - filesystem     # File system usage for each mountpoint
    - fsstat         # File system summary metrics
    - raid           # Raid
    - socket         # Sockets and connection info (linux only)
  enabled: true
  period: 10s
  processes: ['.*']

  # Configure the metric types that are included by these metricsets.
  cpu.metrics:  ["percentages"]  # The other available options are normalized_percentages and ticks.
  core.metrics: ["percentages"]  # The other available option is ticks.

  # A list of filesystem types to ignore. The filesystem metricset will not
  # collect data from filesystems matching any of the specified types, and
  # fsstats will not include data from these filesystems in its summary stats.
  # If not set, types associated to virtual filesystems are automatically
  # added when this information is available in the system (e.g. the list of
  # `nodev` types in `/proc/filesystem`).
  #filesystem.ignore_types: []

  # These options allow you to filter out all processes that are not
  # in the top N by CPU or memory, in order to reduce the number of documents created.
  # If both the `by_cpu` and `by_memory` options are used, the union of the two sets
  # is included.
  #process.include_top_n:

    # Set to false to disable this feature and include all processes
    #enabled: true

    # How many processes to include from the top by CPU. The processes are sorted
    # by the `system.process.cpu.total.pct` field.
    #by_cpu: 0

    # How many processes to include from the top by memory. The processes are sorted
    # by the `system.process.memory.rss.bytes` field.
    #by_memory: 0

  # If false, cmdline of a process is not cached.
  #process.cmdline.cache.enabled: true

  # Enable collection of cgroup metrics from processes on Linux.
  #process.cgroups.enabled: true

  # A list of regular expressions used to whitelist environment variables
  # reported with the process metricset's events. Defaults to empty.
  #process.env.whitelist: []

  # Include the cumulative CPU tick values with the process metrics. Defaults
  # to false.
  #process.include_cpu_ticks: false

  # Raid mount point to monitor
  #raid.mount_point: '/'

  # Configure reverse DNS lookup on remote IP addresses in the socket metricset.
  #socket.reverse_lookup.enabled: false
  #socket.reverse_lookup.success_ttl: 60s
  #socket.reverse_lookup.failure_ttl: 60s


  # Diskio configurations
  #diskio.include_devices: []

- module: docker
  metricsets:
    - "container"
    - "cpu"
    - "diskio"
    - "healthcheck"
    - "info"
    - "image"
    - "memory"
    - "network"
  hosts: ["unix:///var/run/docker.sock"]
  period: 10s
  enabled: true

- module: postgresql
  enabled: true
  metricsets:
    # Stats about every PostgreSQL database
    - database
    # Stats about the background writer process's activity
    - bgwriter
    # Stats about every PostgreSQL process
    - activity
    # For a description of each field in the metricset
    - statement
  period: 10s
  hosts: ["postgres://postgres:5432?sslmode=disable"]
  # Username to use when connecting to PostgreSQL. Empty by default.
  username: ${AWX_DB_USER}
  # Password to use when connecting to PostgreSQL. Empty by default.
  password: ${AWX_DB_PASS}

- module: rabbitmq
  metricsets: ["node", "queue", "connection", "exchange"]
  enabled: true
  period: 10s
  hosts: ["rabbitmq:5672","rabbitmq:15672"]

  # Management path prefix, if `management.path_prefix` is set in RabbitMQ
  # configuration, it has to be set to the same value.
  #management_path_prefix: ""

  username: ${AWX_RABBITMQ_USER}
  password: ${AWX_RABBITMQ_PASS}

hostPid: true
reload.enabled: true

processors:
  - add_docker_metadata:
      host: "unix:///var/run/docker.sock"
      match_fields: ["system.process.cgroup.id"]
      match_pids: ["process.pid", "process.ppid"]
      match_source: true
      match_source_index: 4
      match_short_id: true
      cleanup_timeout: 60
      labels.dedot: false

  - add_host_metadata:
      netinfo.enabled: true

  - add_process_metadata:
      match_pids: [system.process.ppid]
      target: system.process.parent

#-------------------------- Elasticsearch output ------------------------------
output.elasticsearch:
  hosts: '192.168.43.184:9200'
  username: '${ELASTICSEARCH_USERNAME:elastic}'
  password: '${ELASTICSEARCH_PASSWORD:changeme}'


#============================== Dashboards & Kibana =====================================
# These settings control loading the sample dashboards to the Kibana index. Loading
# the dashboards is disabled by default and can be enabled either by setting the
# options here, or by using the `-setup` CLI flag.
setup.kibana.host: '192.168.43.184:5601'
setup.dashboards.enabled: true
setup.dashboards.always_kibana: true #Only talk to Kibana, which is important for the retry
setup.dashboards.retry.enabled: true #Retry in case Kibana is not up yet
setup.dashboards.retry.interval: 10s

#============================== Xpack Monitoring ===============================

xpack.monitoring:
  enabled: true
  elasticsearch:



